version: '3.7'

networks:
  my-network:
    external: true

services:
  postgres:
    image: postgres:17-bullseye
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    logging:
      options:
        max-size: 11m
        max-file: "3"
    networks:
      - my-network

  webserver:
    container_name: webserver
    image: apache/airflow:slim-latest-python3.11
    entrypoint: [ '/opt/airflow/script/entrypoint.sh' ]
    command: webserver
    depends_on:
      - postgres
    env_file:
      - .env
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
      # - ./utils:/opt/airflow/utils
      # - ./logs/:/opt/airflow/logs
    ports:
      - "8080:8080"
    healthcheck:
      test: [ 'CMD-SHELL', "[ -f /opt/airflow/airflow-webserver.pid ]" ]
      interval: 90s
      timeout: 90s
      retries: 3
    networks:
      - my-network

  scheduler:
    container_name: scheduler
    image: apache/airflow:slim-latest-python3.11
    depends_on:
      webserver:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
      # - ./logs/:/opt/airflow/logs
    entrypoint: [ '/opt/airflow/script/entrypoint.sh' ]

    command: scheduler
    networks:
      - my-network
